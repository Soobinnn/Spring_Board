<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">
    <!-- 01. 게시글 전체 목록 조회 -->
<!--     <select id="listAll" resultType="BoardVO">
        SELECT 
            bno, 
            title, 
            content, 
            writer,
            regdate, 
            viewcnt 
        FROM 
            tbl_board
        ORDER BY 
            bno desc, 
            regdate desc
    </select> -->
    
    <!-- 01. 게시글 전체목록 조회 및 검색 조회까지 -->
	<select id="listAll" resultType="BoardVO">
    	<!-- 회원권환이 없는 게시글 목록 쿼리
    SELECT bno, title, content, writer, regdate, viewcnt 
    FROM tbl_board -->
    <!-- SELECT bno, title, content, b.regdate, viewcnt, user_name AS userName
    FROM tbl_board b, tbl_member m -->
    <include refid="pagingHeader"></include>
    SELECT ROWNUM, bno, title, content, b.regdate, viewcnt, user_name AS userName, 
     <!-- ** 댓글숫자표시 -->
     (SELECT COUNT(*) FROM tbl_reply WHERE bno=b.bno) AS recnt
    FROM tbl_board b, tbl_member m
    <!-- WHERE절을 include 태그로 삽입 -->
    <include refid="search"></include>
    ORDER BY bno desc, b.regdate DESC 
     <include refid="pagingFooter"></include>   
	</select>
	
    <!-- 02. 게시글 작성 -->
    <insert id="insert">
        INSERT INTO tbl_board (
          bno, 
          title, 
          content, 
          writer    
        ) VALUES (
          (SELECT NVL(MAX(bno)+1, 1)FROM tbl_board),
          #{title},
          #{content},
          #{writer}   
        )
    </insert>
    <!--03. 게시글 상세보기 조회 -->
    <select id="view" resultType="BoardVO">
        SELECT b.*, user_name as userName 
        from tbl_board b, tbl_member m
        WHERE bno = #{bno} and b.writer = m.user_id 
    </select>
    <!-- 04. 게시글 조회수 증가처리 -->
    <update id="increaseViewcnt">
        UPDATE tbl_board SET viewcnt = viewcnt + 1 
        WHERE bno = #{bno}
    </update>
    <!-- 05. 게시글 수정처리 -->
    <update id="updateArticle">
        UPDATE tbl_board SET
            title = #{title},
            content = #{content},
            writer = #{writer}
        WHERE bno = #{bno}
    </update>
    <!-- 06. 게시글 삭제처리 -->
    <delete id="deleteArticle">
        DELETE FROM tbl_board
        WHERE bno = #{bno}
    </delete>
     
	<!-- 07. 게시글 레코드 갯수 -->
	<select id="countArticle" resultType="int">
    	SELECT COUNT(*) FROM tbl_board b, tbl_member m
    	<!-- WHERE절을 include 태그로 삽입 -->
    	<include refid="search"></include>
	</select>
 
	<!-- sql code 조각 -->
	<!-- 반복되는 sql의 일부를 sql태그를 이용하여 따로 빼둘수 있다. -->
	<sql id="search">
    	<choose>
       	 <!-- 검색옵션이 전체 검색일 경우 -->
        	<when test="searchOption == 'all'">
        	WHERE b.writer = m.user_id
        	AND
        	(user_name like '%'||#{keyword}||'%'
            OR content like '%'||#{keyword}||'%'
            OR title like '%'||#{keyword}||'%')       	 
        	</when>
        	<!-- 	WHERE writer like '%'||#{keyword}||'%'
           		OR content like '%'||#{keyword}||'%'
          	  	OR title like '%'||#{keyword}||'%' -->
        	<!-- 전체 검색이 아닐 경우 -->
        	<otherwise>
           		<!--  WHERE ${searchOption} like '%'||#{keyword}||'%' -->
           		 WHERE b.writer = m.user_id 
            	AND ${searchOption} like '%'||#{keyword}||'%'
        	</otherwise>
    	</choose>
	</sql>
	
	<!-- 페이징 sql -->
	<sql id="pagingHeader">
    	SELECT * FROM (
        	SELECT ROWNUM AS rn, A.* FROM (
	</sql>
	<sql id="pagingFooter">
        ) A
    ) WHERE rn BETWEEN #{start} AND #{end}
	</sql>
	
</mapper>